{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["Container","styled","div","Button","button","H1","h1","App","props","state","data","i","myStyle","fontsize","color","React","Component","Car","name","changeColor","setState","helloAnswear","alert","kick","Math","random","changeUsername","event","username","target","value","changeUsername2","username2","mySubmitHandler","preventDefault","changeData","nam","val","brand","model","year","username3","age","this","id","onClick","type","onChange","onSubmit","myCar","present","mod","show","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.3154651a.chunk.js","sourcesContent":["import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\n// const myStyles = makeStyles({\r\n// \tcontainer:{\r\n// \t\tbackgroundColor: 'black',\r\n// \t},\r\n// \tbutton: {\r\n// \t\tbackground: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)',\r\n// \t\tborder: 0,\r\n// \t\tborderRadius: 3,\r\n// \t\tboxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\r\n// \t\tcolor: 'white',\r\n// \t\theight: 48,\r\n// \t\tpadding: '0 30px',\r\n// \t},\r\n// });\r\n\r\nconst Container = styled.div`\r\n\t//\r\n`;\r\n\r\nconst Button = styled.button`\r\n\tbackground: rgb(7,147,0);\r\n\tbackground: linear-gradient(45deg, rgba(7,147,0,1) 19%, rgba(83,232,255,1) 90%);\r\n\tborder: 0;\r\n\tborderRadius: 3;\r\n\tboxShadow: 0 3px 5px 2px rgba(255, 105, 135, .3);\r\n\tcolor: white;\r\n\theight: 60;\r\n\tpadding: 10px;\r\n\tmargin: 5px;\r\n\ttext-transform: uppercase;\r\n`;\r\n\r\nconst H1 = styled.h1`\r\n\tcolor: red;\r\n`;\r\n\r\nclass App extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\r\n\t\tthis.state = {\r\n\t\t\tdata:\r\n\t\t\t\t[\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t\"id\": 1,\r\n\t\t\t\t\t\t\"name\": \"Jan\",\r\n\t\t\t\t\t\t\"age\": 12\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t\"id\": 2,\r\n\t\t\t\t\t\t\"name\": \"Stanis≈Çaw\",\r\n\t\t\t\t\t\t\"age\": 45\r\n\t\t\t\t\t}\r\n\t\t\t\t],\r\n\t\t\ti: 0,\r\n\t\t\tmyStyle:\r\n\t\t\t\t{\r\n\t\t\t\t\tfontsize: 100,\r\n\t\t\t\t\tcolor: '#FF0000'\r\n\t\t\t\t}\r\n\t\t};\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t// <div className=\"App\">\r\n\t\t\t// \tHello World!\r\n\t\t\t// \t<br/>\r\n\t\t\t//\r\n\t\t\t// \t{this.state.i === 1 ? 'True!' : 'False'}\r\n\t\t\t// \t<br/>\r\n\t\t\t//\r\n\t\t\t// \t<h1 style={this.state.myStyle}>Header</h1>\r\n\t\t\t// \t<br/>\r\n\t\t\t//\r\n\t\t\t// \t{/*Komentarz wieloliniowy*/}\r\n\t\t\t//\r\n\t\t\t// \t<Header/>\r\n\t\t\t// \t<Content/>\r\n\t\t\t// \t<br/>\r\n\t\t\t//\r\n\t\t\t// </div>\r\n\r\n\t\t\t<Car/>\r\n\t\t)\r\n\t}\r\n}\r\n\r\n// class Header extends React.Component {\r\n// \trender() {\r\n// \t\treturn (\r\n// \t\t\t<div>\r\n// \t\t\t\t<h1>Header</h1>\r\n// \t\t\t</div>\r\n// \t\t);\r\n// \t}\r\n// }\r\n//\r\n// class Content extends React.Component {\r\n// \trender() {\r\n// \t\treturn (\r\n// \t\t\t<div>\r\n// \t\t\t\t<h1>Content</h1>\r\n// \t\t\t</div>\r\n// \t\t);\r\n// \t}\r\n// }\r\n//\r\n// }\r\n\r\nclass Car extends React.Component {\r\n\tconstructor(name) {\r\n\t\tsuper(name);\r\n\t\tthis.state = {\r\n\t\t\tbrand: \"Ford\",\r\n\t\t\tmodel: \"Mustang\",\r\n\t\t\tyear: 1944,\r\n\t\t\tcolor: \"Red\",\r\n\t\t\tusername: '',\r\n\t\t\tusername2: '',\r\n\t\t\tusername3: '',\r\n\t\t\tage: null,\r\n\t\t};\r\n\t}\r\n\r\n\tpresent() {\r\n\t\treturn 'I have a ' + this.state.brand;\r\n\t}\r\n\r\n\tchangeColor = () => this.setState({color: \"Blue\"});\r\n\thelloAnswear = () => alert(\"General Kenobi!\");\r\n\tkick = () => {\r\n\t\tconst min = 1;\r\n\t\tconst max = 100;\r\n\t\tconst rand = min + Math.random() * (max - min);\r\n\t\t// this.setState({ random: this.state.random + rand });\r\n\t\tif (rand > 50) alert(\"Goal!\");\r\n\t\telse alert(\"Miss!\");\r\n\t};\r\n\tchangeUsername = (event) => this.setState({username: event.target.value});\r\n\tchangeUsername2 = (event) => this.setState({username2: event.target.value});\r\n\tmySubmitHandler = (event) => {\r\n\t\tevent.preventDefault();\r\n\t\talert('You are submitting ' + this.state.username2);\r\n\t};\r\n\tchangeData = (event) => {\r\n\t\tlet nam = event.target.name;\r\n\t\tlet val = event.target.value;\r\n\t\tthis.setState({[nam]: val})\r\n\t};\r\n\r\n\trender() {\r\n\t\t//return <h1>I am CAR ;)</h1>\r\n\r\n\t\treturn (\r\n\t\t\t<Container>\r\n\t\t\t\t<H1>My {this.state.brand}</H1>\r\n\t\t\t\t<br/>\r\n\r\n\t\t\t\t<p id=\"text\">\r\n\t\t\t\t\tThis is a {this.state.color} {this.state.model} from {this.state.year}\r\n\t\t\t\t</p>\r\n\t\t\t\t<br/>\r\n\r\n\t\t\t\t{/*<button type=\"button\" id=\"changeColor\" onClick={this.changeColor}>Change Color</button>*/}\r\n\t\t\t\t{/*<br/>*/}\r\n\r\n\t\t\t\t{/*<button type=\"button\" onClick={this.helloAnswear}>Hello There!</button>*/}\r\n\t\t\t\t{/*<br/>*/}\r\n\r\n\t\t\t\t{/*<button type=\"button\" onClick={this.kick}>Kick Football</button>*/}\r\n\t\t\t\t{/*<br/>*/}\r\n\r\n\t\t\t\t<Button onClick={this.changeColor}>Change Color</Button>\r\n\t\t\t\t<br/>\r\n\r\n\t\t\t\t<Button onClick={this.helloAnswear}>Hello There!</Button>\r\n\t\t\t\t<br/>\r\n\r\n\t\t\t\t<Button onClick={this.kick}>Kick Football</Button>\r\n\t\t\t\t<br/><br/><br/>\r\n\r\n\t\t\t\t<form>\r\n\t\t\t\t\t<H1>Hello {this.state.username}</H1>\r\n\r\n\t\t\t\t\t<p>Enter your name: </p>\r\n\r\n\t\t\t\t\t<input type='text' onChange={this.changeUsername}/>\r\n\t\t\t\t</form>\r\n\t\t\t\t<br/><br/>\r\n\r\n\t\t\t\t<form onSubmit={this.mySubmitHandler}>\r\n\t\t\t\t\t<H1>Hello {this.state.username2}</H1>\r\n\t\t\t\t\t<p>Enter your name and submit:</p>\r\n\t\t\t\t\t<input type='text' onChange={this.changeUsername2}/>\r\n\t\t\t\t\t<input type='submit'/>\r\n\t\t\t\t</form>\r\n\r\n\t\t\t\t<form>\r\n\t\t\t\t\t<H1>Hello {this.state.username3} {this.state.age}</H1>\r\n\t\t\t\t\t<p>Enter your name and age:</p>\r\n\t\t\t\t\t<input type='text' name='username3' onChange={this.changeData}/>\r\n\t\t\t\t\t<br/>\r\n\t\t\t\t\t<input type='number' name='age' onChange={this.changeData}/>\r\n\t\t\t\t</form>\r\n\r\n\t\t\t</Container>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nlet myCar = new Car(\"Ford\");\r\nmyCar.present();\r\n\r\nclass Model extends Car {\r\n\tconstructor(name, mod) {\r\n\t\tsuper();\r\n\t\tthis.model = mod;\r\n\t}\r\n\r\n\tshow() {\r\n\t\treturn this.present() + ', it is a ' + this.model\r\n\t}\r\n}\r\n\r\nmyCar = new Model(\"Ford\", \"Mustang\");\r\nmyCar.show();\r\n\r\n// // OLD\r\n// let hello = function () {\r\n// \treturn \"Hello World!\";\r\n// };\r\n//\r\n// // NEW\r\n// let hello2 = () => {\r\n// \treturn \"Hello World!\";\r\n// };\r\n//\r\n// // 1 JOB\r\n// let hello3 = () => \"Hello world!\";\r\n//\r\n// // 1 JOB + ARGS\r\n// let hello4 = (arg) => \"Hello\" + arg;\r\n//\r\n// //1 JOB + 1 ARG\r\n// let hello5 = arg => \"Hello\" + arg;\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}